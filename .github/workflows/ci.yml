defaults:
  run:
    shell: "bash"

name: "CI"

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

# Do not run multiple CI jobs in parallel
concurrency:
  group: "${{ github.workflow }}-${{ github.head_ref || github.run_id }}"
  cancel-in-progress: true

env:
  # Backend
  PYTHONUNBUFFERED: "1"
  # Frontend
  REACT_APP_APP_DESCRIPTION: "Areti Health Demo Application"
  REACT_APP_APP_LOGO: "default"
  REACT_APP_APP_TITLE: "Areti Health"

jobs:
  # TODO: Check requirements.txt export
  # TODO: Run checks only for changes in `backend/` and related root files
  ci-backend:
    name: "CI backend"

    runs-on: "ubuntu-22.04"

    steps:
      - uses: "actions/checkout@v4.1.7"

      - id: "install"
        uses: "./.github/actions/install_backend/"

      - name: "Cache mypy"
        uses: "actions/cache@v4.2.0"
        with:
          path: ".mypy_cache/"
          key: "mypy-${{ runner.os }}-${{ steps.install.outputs.python-version }}"

      - uses: "pre-commit/action@v3.0.1"

      - name: "CI Backend"
        uses: "./.github/actions/ci_backend/"
        with:
          aws-access-key-id: "${{ secrets.CI_AWS_ACCESS_KEY_ID }}"
          aws-secret-access-key: "${{ secrets.CI_AWS_SECRET_ACCESS_KEY }}"

  # TODO: Check code style
  # TODO: Run checks only for changes in `areti-widget/` and related root files
  ci-areti-widget:
    name: "CI Areti Widget"

    runs-on: "ubuntu-22.04"

    steps:
      - uses: "actions/checkout@v4.1.7"

      - name: "CI Areti Widget"
        uses: "./.github/actions/ci_areti_widget/"

  # TODO: Check code style
  # TODO: Run checks only for changes in `FLEX_ADMIN_DIR` and related root files
  ci-flex-admin:
    name: "CI Flex Admin plugin"

    runs-on: "ubuntu-22.04"

    steps:
      - uses: "actions/checkout@v4.1.7"

      - name: "CI Flex Admin"
        uses: "./.github/actions/ci_flex_admin/"
        with:
          twilio-account-sid: "${{ secrets.FLEX_ADMIN_STAGING_TWILIO_ACCOUNT_SID }}"
          twilio-auth-token: "${{ secrets.FLEX_ADMIN_STAGING_TWILIO_AUTH_TOKEN }}"

  # TODO: Run checks only for changes in `infrastructure/` and related root files
  ci-infrastructure:
    name: "CI infrastructure"

    runs-on: "ubuntu-22.04"

    steps:
      - uses: "actions/checkout@v4.1.7"

      - uses: "./.github/actions/install_backend/"
        with:
          cache-key-suffix: "-infrastructure-test"
          poetry-install-args: "--only=infrastructure,test"

      - name: "CI Infrastructure"
        uses: "./.github/actions/ci_infrastructure/"

  # TODO: Run checks only for changes in `survey/` and related root files
  ci-survey:
    name: "CI survey"

    runs-on: "ubuntu-22.04"

    steps:
      - uses: "actions/checkout@v4.1.7"

      - name: "CI Survey"
        uses: "./.github/actions/ci_survey/"

  test-cypress:
    name: "Run Cypress Tests"

    needs: ["ci-backend", "ci-infrastructure"]
    if: "${{ github.ref == 'refs/heads/main' }}"

    uses: "./.github/workflows/run_cypress.yml"
    # TODO: Drop off after Cypress tests will become green again
    with:
      continue-on-error: true
    secrets:
      twilio-account-sid: "${{ secrets.STAGING_TWILIO_ACCOUNT_SID }}"
