name: "Install Frontend"
description: "Setup node.js and run installer. If required - install twilio cli & necessary plugins in-between these calls."

inputs:
  install-args:
    description: "Additional args to pass to installer call"
    required: false
    default: ""

  install-twilio-cli:
    description: "Install twilio-cli to global scope?"
    required: false
    default: "false"

  install-twilio-flex-plugin:
    description: "Install twilio flex plugin manager?"
    required: false
    default: "false"

  install-twilio-serverless-plugin:
    description: "Install twilio serverless plugin?"
    required: false
    default: "false"

  installer:
    description: "Installer to use: npm / yarn"
    required: true
    default: "npm"

  working-directory:
    description: "Working directory for composite action."
    required: true

runs:
  using: "composite"
  steps:
    - name: "Prepare node version file"
      shell: "bash"
      run: |
        set -euo pipefail

        if [ ! -f "${{ inputs.working-directory }}.node-version" ]; then
          ln -sfv "$(pwd)/.node-version" "${{ inputs.working-directory }}/.node-version"
        fi

    - name: "Install node.js & twilio CLI with or without plugins"
      uses: "./.github/actions/install_node/"
      with:
        install-twilio-cli: "${{ inputs.install-twilio-cli }}"
        install-twilio-flex-plugin: "${{ inputs.install-twilio-flex-plugin }}"
        install-twilio-serverless-plugin: "${{ inputs.install-twilio-serverless-plugin }}"
        node-version-file: "${{ inputs.working-directory }}/.node-version"

    - name: "Cache node modules"
      uses: "actions/cache@v4.2.0"
      with:
        path: "${{ inputs.working-directory }}node_modules"
        key: "node-modules-${{ inputs.working-directory }}-${{ hashFiles(format('{0}**/package-lock.json', inputs.working-directory), format('{0}**/yarn.lock', inputs.working-directory))}}"

    - name: "Install frontend dependencies"
      shell: "bash"
      run: "${{ inputs.installer }} install ${{ inputs.install-args }}"
      working-directory: "${{ inputs.working-directory }}"
