name: "Prepare frontend bundle for CDK deploy"
description: "If not forced - download latest bundle from S3, if the bundle does not exist or forced - build the bundle from the scratch."

inputs:
  force:
    description: "Force frontend bundle build?"
    required: false
    default: "false"

  stack-name:
    description: "Stack name for frontend build"
    required: true

runs:
  using: "composite"

  steps:
    - id: "frontend-bundle"
      name: "Download frontend bundle from S3 (if needed)"
      shell: "bash"
      run: |
        set -euo pipefail

        frontend_dir="frontend-archive/build"

        # Do not download or build any bundle for aretihealth or survey stacks
        stack_name="${{ inputs.stack-name }}"
        if \
          [ "${stack_name::11}" = "aretihealth" ] \
          || [ "${stack_name::6}" = "survey" ] \
        ; then
          mkdir -p "${frontend_dir}/"
          echo "bundle=fake" >> "${GITHUB_OUTPUT}"

          echo "Fake frontend bundle created in '${frontend_dir}/'"
        # For other stacks (neurality-*)
        else
          # Do not attempt to download bundle if build forced
          if [ "${{ inputs.force }}" = "true" ]; then
            echo "bundle=" >> "${GITHUB_OUTPUT}"

            echo "Forced to build fresh frontend bundle"
          # Otherwise - attempt to download bundle from S3 frontend bucket
          else
            rm -rf "${frontend_dir}/"

            if [ "${stack_name}" = "neurality*-staging" ]; then
              bucket_name="neurality-staging-frontend"
            else
              bucket_name="${stack_name}-frontend"
            fi

            echo "Downloading frontend bundle from 's3://${bucket_name}/' to '${frontend_dir}/'"
            aws s3 cp --recursive "s3://${bucket_name}/" "${frontend_dir}/" || :

            echo "Listing of '${frontend_dir}/':"
            ls -l "${frontend_dir}/" 2> /dev/null

            if [ -d "${frontend_dir}/" ]; then
              echo "bundle=true" >> "${GITHUB_OUTPUT}"
              echo "Frontend bundle properly downloaded and ready!"
            else
              echo "bundle=" >> "${GITHUB_OUTPUT}"
              echo "Something went wrong on downloading frontend bundle. Requesting to build new frontend bundle."
            fi
          fi
        fi

    - id: "frontend-config"
      name: "Setup frontend build"
      if: "${{ steps.frontend-bundle.outputs.bundle == '' }}"
      shell: "bash"
      run: |
        set -euo pipefail

        app_title="Areti Health"
        app_description="Areti Health Demo Application"
        app_logo="aidemo"

        if [[ "${{ inputs.stack-name }}" =~ ^neurality.*-staging$ ]]; then
          app_description="Areti Health Staging Application"
        fi

        echo "app-title=${app_title}" >> "${GITHUB_OUTPUT}"
        echo "app-description=${app_description}" >> "${GITHUB_OUTPUT}"
        echo "app-logo=${app_logo}" >> "${GITHUB_OUTPUT}"

    - name: "Install frontend application"
      if: "${{ steps.frontend-bundle.outputs.bundle == '' }}"
      uses: "./.github/actions/install_frontend/"
      with:
        working-directory: "frontend-archive/"

    - name: "Build frontend application"
      if: "${{ steps.frontend-bundle.outputs.bundle == '' }}"
      uses: "./.github/actions/build_frontend/"
      with:
        cache-suffix: "-${{ inputs.stack-name }}"
        working-directory: "frontend-archive/"
      env:
        REACT_APP_APP_DESCRIPTION: "${{ steps.frontend-config.outputs.app-description }}"
        REACT_APP_APP_LOGO: "${{ steps.frontend-config.outputs.app-logo }}"
        REACT_APP_APP_TITLE: "${{ steps.frontend-config.outputs.app-title }}"
        REACT_APP_WITH_LOGIN: "true"
